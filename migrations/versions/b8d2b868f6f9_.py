"""empty message

Revision ID: b8d2b868f6f9
Revises: 6b68bf381892
Create Date: 2020-03-10 22:25:08.208199

"""
from alembic import op
import sqlalchemy as sa
from migrate.changeset.constraint import ForeignKeyConstraint
from sqlalchemy.sql import text
from sqlalchemy import create_engine  
from sqlalchemy import Table, Column, String, MetaData


# revision identifiers, used by Alembic.
revision = 'b8d2b868f6f9'
down_revision = '6b68bf381892' 
branch_labels = None
depends_on = None


def upgrade():
    db_string = "postgres://archanapur@localhost:5432/fyyur"
    db = create_engine(db_string)  
    db.execute('ALTER TABLE fyyur_app."Show" DROP CONSTRAINT  "Show_artist_id_fkey"')
    db.execute('alter table fyyur_app."Show" add constraint "Show_artist_id_fkey" foreign key (artist_id) references fyyur_app."Artist" (id) on delete cascade on update cascade')

    db.execute('ALTER TABLE fyyur_app."Show" drop constraint "Show_venue_id_fkey"')
    db.execute('alter table fyyur_app."Show" add constraint "Show_venue_id_fkey" foreign key (venue_id) references fyyur_app."Venue" (id) on delete cascade on update cascade')

    # ### commands auto generated by Alembic - please adjust! ###
    '''cons = ForeignKeyConstraint(['Show.artist_id'], ['Artist.id'])
    v_cons = ForeignKeyConstraint(['Show.venue_id'], ['Venue.id'])
    cons.drop()
    v_cons.drop()

    cons = ForeignKeyConstraint(['Show.artist_id'], ['Artist.id'],onupdate="CASCADE", ondelete="CASCADE")
    v_cons = ForeignKeyConstraint(['Show.venue_id'], ['Venue.id'],onupdate="CASCADE", ondelete="CASCADE")
    # Create the constraint
    cons.create()
    v_cons.create()'''

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Show',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Show_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('artist_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('venue_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['Artist.id'], name='Show_artist_id_fkey'),
    sa.ForeignKeyConstraint(['venue_id'], ['Venue.id'], name='Show_venue_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Show_pkey')
    )
    op.create_table('Artist',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Artist_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('genres', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('image_link', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('facebook_link', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Artist_pkey')
    )
    op.create_table('Venue',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Venue_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('image_link', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('facebook_link', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Venue_pkey')
    )
    op.create_table('alembic_version',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name='alembic_version_pkc')
    )
    op.drop_table('Show', schema='fyyur_app')
    op.drop_table('Venue', schema='fyyur_app')
    op.drop_table('Artist', schema='fyyur_app')
    # ### end Alembic commands ###
